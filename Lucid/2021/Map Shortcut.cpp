/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

const int MOD = 1e9 + 7;
const vector<ii> dir {{0, 1}, {1, 0}, {-1, 0}, {0, -1}};

void solve() {
    int n;
    cin >> n;

    int facing = 0;
    double x = 0, y = 0;
    for (int i = 0; i < n; i++) {
        string st;
        int deg, paces;
        cin >> st >> deg >> paces;

        if (st == "Left") {
            facing = (((facing - deg) % 360) + 360) % 360;
        } else {
            facing = (facing + deg) % 360;
        }

        double hor = abs(paces * cos((facing+270) * M_PI / 180.0));
        double vert = abs(paces * sin((facing+90) * M_PI / 180.0));

        if (facing / 90 == 0) {
            x += hor;
            y += vert;
        } else if (facing / 90 == 1) {
            x += hor;
            y -= vert;
        } else if (facing / 90 == 2) {
            x -= hor;
            y -= vert;
        } else {
            x -= hor;
            y += vert;
        }
    }

	if (x >= 0) {
		cout << "Right ";	
	} else {
		cout << "Left ";
	}

    int deg = round(atan(abs(y / x)) * 180 / M_PI);
    int paces = round(sqrt(x * x + y * y));

    if (y >= 0) {
        cout << 90 - deg << " " << paces << endl;
    } else {
        cout << 90 + deg << " " << paces << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


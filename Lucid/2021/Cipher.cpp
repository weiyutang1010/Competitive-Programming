/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

const int MOD = 1e9 + 7;

void solve() {
    int col;
    cin >> col;

    vector<int> v(col);
    for (int& x: v) cin >> x;

    string st;
    cin.clear();
    cin.ignore();
    getline(cin, st);
    int n = st.size();

    int row = (n + col - 1) / col;
    vector<vector<char>> ans(row, vector<char> (col, 0));
   
    int idx = 0;
    for (int i = 0; i < (int)ans.size(); i++) {
        for (int j = 0; j < col; j++) {
            if (idx >= n) break;
            ans[i][j] = st[idx];
            idx++;
        }
    }

    for (int& x: v) {
        for (int i = 0; i < row; i++) {
            if (ans[i][x-1] != 0) {
                cout << ans[i][x-1];
            }
        }
    }
    cout << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


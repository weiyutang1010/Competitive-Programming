/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

const int MOD = 1e9 + 7;
const vector<ii> dir {{0, 1}, {1, 0}, {-1, 0}, {0, -1}};

bool is_char(char c) {
    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
}

void solve() {
    bool found = false;
    int idx = 0;
    string st;
    while (getline(cin, st)) {
        int n = st.size();
        idx++;

        if (st[0] < 'A' || st[0] > 'Z') {
            cout << idx << ' ';
            found = true;
            continue;
        }
        if (st[n-1] != '.') {
            cout << idx << ' ';
            found = true;
            continue;
        }

        for (int i = 1; i < n - 1; i++) {
            if (st[i] == ',') {
                if (!is_char(st[i-1]) || st[i+1] != ' ' || (i + 2 < n && !is_char(st[i+2]))) {
                    cout << idx << ' ';
                    found = true;
                    break;
                }
            } else if (st[i] == ' ') {
                if (st[i-1] == ' ' || st[i+1] == ' ') {
                    cout << idx << ' ';
                    found = true;
                    break;
                }
            } else if (st[i] == '.') {
                cout << idx << ' ';
                found = true;
                break;
            }
        }
    }

    if (!found) {
        cout << "No Problems" << endl;
    } else {
        cout << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


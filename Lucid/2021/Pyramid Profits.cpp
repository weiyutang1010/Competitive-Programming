/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

const int MOD = 1e9 + 7;

struct salep {
    string boss;
    int percent;
};

double dfs(map<string, pair<string, int>>& graph, string name, int percent, int profit, map<string, double>& mp) {
    double keep = 0;
   
    if (name == "Jude") {
        keep = profit;
    } else {
        keep = dfs(graph, graph[name].f, graph[name].s, profit, mp);
    }
    
    double earning = keep * (percent/100.0);
    mp[name] += earning;
    return keep - earning;
}

void solve() {
    int n;
    cin >> n;

    map<string, double> mp;
    map<string, pair<string, int>> graph;
    for (int i = 0; i < n; i++) {
        string name, boss;
        int p;
        cin >> name >> boss >> p;

        graph[name].f = boss;
        graph[name].s = 100 - p;
        mp[name] = 0.0;
        mp[boss] = 0.0;
    }

    int m;
    cin >> m;

    for (int i = 0; i < m; i++) {
        string name;
        int profit;
        cin >> name >> profit;
        
        if (name != "Jude") {
            mp[name] += dfs(graph, graph[name].f, graph[name].s, profit, mp);
        } else {
            mp[name] += profit;
        }
    }

    for (auto& [x, y]: mp) {
        cout << x << " " << (int)round(y) << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: C.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "C";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int k;
    cin >> k;

    if (k == 1) {
        cout << 1 << " " << 1 << endl;
        return;
    }

    int64_t low = 1;
    while ((low+1) * (low+1) < k) {
        low++;
    }
    int64_t high = low + 1;

    if ((high * high) - k + 1 > high) {
        cout << k - (low * low) << " " << high << endl;
    } else {
        cout << high << " " << (high * high) - k + 1 << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:38 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "B";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int n, k;
    cin >> n >> k;
    vector<int> id(n);
    for (int& x: id) cin >> x;

    queue<int> Q;
    unordered_map<int, int> seen;
    for (int i = 0; i < n; i++) {
        if (seen[id[i]]) continue;

        if ((int)Q.size() >= k) {
            seen[Q.front()] = 0;
            Q.pop();
        }
        
        Q.push(id[i]);
        seen[id[i]] = 1;
    }

    // print out length and content of screen
    cout << Q.size() << endl;
    stack<int> st;
    while (!Q.empty()) {
        st.push(Q.front());
        Q.pop();
    }
    while (!st.empty()) {
        cout << st.top() << " ";
        st.pop();
    }
    cout << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

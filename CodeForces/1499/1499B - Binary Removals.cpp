/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:38 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "B";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    string s;
    cin >> s;
    int n = s.size();

    for (int i = 0; i < n; i++) {
        int lt = i - 1, rt = i + 1;
        bool left_valid = true, right_valid = true;
        while (lt >= 0) {
            if (s[lt] == '1' && s[lt] == s[lt + 1]) {
                left_valid = false;
                break;
            }
            lt--;
        }
        while (rt < n) {
            if (s[rt] == '0' && s[rt] == s[rt - 1]) {
                right_valid = false;
                break;
            }
            rt++;
        }

        if (left_valid && right_valid) {
            cout << "YES" << endl;
            return;
        }
    }
    cout << "NO" << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

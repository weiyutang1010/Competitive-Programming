/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:38 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "B";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

int MOD = 1e9 + 7;

void solve() {
    int n;
    string st;
    cin >> n >> st;

    unordered_map<char, int> mp;
    bool found = false;
    int v1 = 0, v2 = 0;

    for (int i = 0; i < n; i++) {
        mp[st[i]]++;
        if (st[i] == '1') {
            cout << 1 << endl;
            cout << 1 << endl;
            return;
        }
        else if (st[i] == '2' && i > 0) {
            found = true;
            v1 = 2;
            v2 = (st[0] - '0') * 10 + 2;
        }
        else if (((st[i] - '0') % 2) == 0 && st[i] != '2') {
            cout << 1 << endl;
            cout << st[i] << endl;
            return;
        }
        else if (st[i] == '5' && i > 0) {
            found = true;
            v1 = 2;
            v2 = (st[0] - '0') * 10 + 5;
        }
        else if (st[i] == '9') {
            cout << 1 << endl;
            cout << 9 << endl;
            return;
        }
        else if (mp[st[i]] > 1) {
            found = true;
            v1 = 2;
            v2 = (st[i] - '0') * 10 + (st[i] - '0');
        }
        else if (st[i] == '7' && (mp['2'] > 0 || mp['5'] > 0)) {
            found = true;
            v1 = 2;
            v2 = (mp['2'] > 0 ? 27 : 57);
        }
    }

    if (found) {
        cout << v1 << endl;
        cout << v2 << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;

    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:38 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "B";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int n, m;
    cin >> n >> m;
    map<int, int> mp;
    for (int i = 0; i < n; i++) {    
        int x;
        cin >> x;
        mp[x % m]++;
    }

    int ans = 0;
    for (auto& x: mp) {
        if (x.f == 0) ans++;
        else if (x.f * 2 == m) {
            ans++;
        } else if (2 * x.f < m || mp.find(m - x.f) == mp.end()) {
            ans += 1 + max(0, abs(x.s - mp[m - x.f]) - 1);
        }
    }

    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

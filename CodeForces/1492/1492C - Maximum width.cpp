/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: C.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "C";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int n, m;
    cin >> n >> m;
    string s, t;
    cin >> s >> t;

    // start(n) contains starting valid char 
    // and end(n) contains pos of last valid char
    vector<int> start(m), end(m); 
    int pt = 0; // pt points to character in s
    for (int i = 0; i < m; i++, pt++) {
        while(pt < n && s[pt] != t[i]) pt++;
        start[i] = pt;
    }

    // Fill in end array
    pt = n - 1;
    for (int i = m - 1; i >= 0; i--, pt--) {
        while(pt >= 0 && s[pt] != t[i]) pt--;
        end[i] = pt;
    }

    int ans = 0;
    for (int i = 1; i < m; i++) {
        ans = max(ans, end[i] - start[i - 1]);
    }

    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    // cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

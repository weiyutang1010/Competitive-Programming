/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: B.cpp
 * time: Fri Feb 19 14:35:38 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "B";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int n;
    cin >> n;
    vector<int> seen(n, 1);
    vector<int> v(n);
    for (int& x: v) cin >> x;

    int rt = n - 1;
    stack<int> st;
    vector<int> ans;
    for (int i = n - 1; i >= 0; i--) {
        // push value to stack
        st.push(v[i]);
        // update seen value
        seen[v[i] - 1] = 0;
        
        if (v[i] == rt + 1) {
            // pop stack to ans
            while (!st.empty()) {
                ans.push_back(st.top());
                st.pop();
            }

            for (int j = rt; j >= 0; j--) {
                if (seen[j] == 1) {
                    rt = j;
                    break;
                }
            }
        }
    }

    for (int& x: ans) cout << x << " ";
    cout << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: C.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "C";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

int MOD = 1e9+7;

void solve() {
    int n;
    cin >> n;
    vector<int64_t> a(n);
    for (int64_t& x: a) cin >> x;

    sort(a.begin(), a.end());
    int64_t total = 0;
    for (int64_t& x: a) total += x;

    int m;
    cin >> m;
    
    while (m--) {
        int64_t x, y;
        cin >> x >> y;

        int low = lower_bound(a.begin(), a.end(), x) - a.begin();
        if (low == n) low = n - 1;
        int low2 = 0;
        if (low != 0) low2 = low - 1;
        
        int64_t val = a[low];
        int64_t cost1 = max(x - val, (int64_t)0) + max(y - (total - val), (int64_t)0);
        
        int64_t val2 = a[low2];
        int64_t cost2 = max(x - val2, (int64_t)0) + max(y - (total - val2), (int64_t)0);
      
        if (min(cost1, cost2) < 0) cout << 0 << endl;
        else cout << min(cost1, cost2) << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}


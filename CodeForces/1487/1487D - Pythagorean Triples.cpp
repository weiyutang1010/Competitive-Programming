/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: D.cpp
 * time: Fri Feb 19 14:35:42 2021
 */

#include <bits/stdc++.h>
using namespace std;
const string CP_GEN_FILE = "D";

namespace cp {

}

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

void solve() {
    int64_t n;
    cin >> n;

    int64_t ans = 0;
    int64_t c = 0;
    for (int64_t a = 2; a <= n; a++) {
        c = ((a * a) / 2) + 1;
        if (c > n) break;
        if (!((a * a - 1) & 1)) {
            ans++;
        }
    } 

    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    while (t--) {
        solve();
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

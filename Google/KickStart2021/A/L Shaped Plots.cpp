/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: C.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

int check(vector<vector<array<int, 4>>>& sum, int i, int j, int a, int b) {
    if (sum[i][j][a] >= 2 && sum[i][j][b] >= 4) {
        int x = sum[i][j][a];
        int y = sum[i][j][b];
        
        if (y & 1) y--;
        return min(x, y / 2) - 1;
    }
    return 0;
}

int solve() {
    int rows, cols;
    cin >> rows >> cols;
    vector<vector<int>> grid(rows, vector<int> (cols));
    // Up, Down, Left, Right
    vector<vector<array<int, 4>>> sum(rows, vector<array<int, 4>> (cols));
    
    for (vector<int>& x: grid) {
        for (int& y: x) {
            cin >> y;
        }
    }
    
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (grid[i][j] != 0) {
                if (i == 0) sum[i][j][0] = 1;
                else sum[i][j][0] = sum[i-1][j][0] + 1;
                
                if (j == 0) sum[i][j][2] = 1;
                else sum[i][j][2] = sum[i][j-1][2] + 1;
            } else {
                sum[i][j] = {0, 0, 0, 0};
            }
        }
    }
    
    for (int i = rows - 1; i >= 0; i--) {
        for (int j = cols - 1; j >= 0; j--) {
            if (grid[i][j] != 0) {
                if (i == rows - 1) sum[i][j][1] = 1;
                else sum[i][j][1] = sum[i+1][j][1] + 1;
                
                if (j == cols - 1) sum[i][j][3] = 1;
                else sum[i][j][3] = sum[i][j+1][3] + 1;
            } else {
                sum[i][j] = {0, 0, 0, 0};
            }
        }
    }
    
    int ans = 0;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            ans += check(sum, i, j, 0, 2);
            ans += check(sum, i, j, 0, 3);
            ans += check(sum, i, j, 1, 2);
            ans += check(sum, i, j, 1, 3);
            ans += check(sum, i, j, 2, 0);
            ans += check(sum, i, j, 2, 1);
            ans += check(sum, i, j, 3, 0);
            ans += check(sum, i, j, 3, 1);
        }
    }
    
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    int i = 1;
    while (t--) {
        cout << "Case #" << i++ << ": ";
        cout << solve() << endl;
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}
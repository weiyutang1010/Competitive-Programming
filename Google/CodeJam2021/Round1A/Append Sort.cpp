/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */
// Only got the first test case

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

int solve() {
    int n;
    cin >> n;
    vector<string> v(n);
    for (string& x: v) cin >> x;

    int ans = 0;
    for (int i = 1; i < n; i++) {
        // Only append to numbers that are not in order
        int diff_len = v[i - 1].size() - v[i].size();
        while (v[i-1].size() > v[i].size() || (diff_len == 0 && v[i] <= v[i-1])) {
            // If the first few digits are the same and the last digit of longer number is not 9
            if (diff_len > 0 && v[i] == v[i-1].substr(0, v[i].size()) && v[i-1][v[i-1].size()-1] != '9') {
                int sz = v[i].size();
                for (int j = 0; j < diff_len - 1; j++) {
                    v[i] += v[i-1][sz + j];
                }
                v[i] += v[i-1][v[i-1].size()-1] + 1;
                ans += diff_len; 
            } else {
                v[i] += '0';
                ans++;
            }
            diff_len = v[i - 1].size() - v[i].size();
        }
    }

    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    int i = 1;
    while (t--) {
        cout << "Case #" << i++ << ": ";
        cout << solve() << endl;
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

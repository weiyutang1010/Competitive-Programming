/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */

#include <bits/stdc++.h>
using namespace std;

/* ===== BEGIN USER CODE ===== */

#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"

// Did not pass hidden test cases
int solve() {
    int x, y;
    string st;
    cin >> x >> y >> st;

    int n = st.size();
    int q_count = 0;
    for (int i = 0; i < n; i++) {
        if (st[i] == '?') q_count++;
    }

    while (q_count > 0) {
        for (int i = 0; i < n; i++) {
            if (st[i] == '?') {
                if (i == 0 && st[i + 1] != '?') {
                    st[i] = st[i + 1];
                } else if (i == n - 1 && st[i - 1] != '?') {
                    st[i] = st[i - 1];
                } else if (st[i - 1] != '?' && st[i + 1] != '?') {
                    st[i] = st[i - 1];
                } else if (st[i - 1] != '?') {
                    st[i] = st[i - 1];
                }  else if (st[i + 1] != '?') {
                    st[i] = st[i + 1];
                } else {
                    continue;
                }
                q_count--;
            }
        }
    }

    int cost = 0;
    for (int i = 1; i < n; i++) {
        if (st[i - 1] == 'C' && st[i] == 'J') {
            cost += x;
        } else if (st[i - 1] == 'J' && st[i] == 'C') {
            cost += y;
        }
    }
    return cost;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    
    int i = 1;
    while (t--) {
        cout << "Case #" << i++ << ": ";
        cout << solve() << endl;
    }

    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}

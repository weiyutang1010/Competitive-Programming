/*
 * generated by github.com/calgagi/cp_gen
 * author: weiyutang
 * file: A.cpp
 * time: Fri Feb 19 14:35:40 2021
 */
 
#include <bits/stdc++.h>
using namespace std;
 
/* ===== BEGIN USER CODE ===== */
 
#define ll long long
#define ld long double
#define ii pair<int, int>
#define f first
#define s second
#define endl "\n"
 
 
void solve() {
    int n, x;
    cin >> n >> x;
    vector<int> price(n);
    vector<int> pages(n);
    for (int& x: price) cin >> x;
    for (int& x: pages) cin >> x;
 
    // let dp[i][j] = the max pages we can buy considering the first i book with j max total price
    
    // we can choose to consider last book or ignore it
    // if we consider the previous book
    // dp[i][j] = max(dp[i][j-1], dp[i-1][j-price[i]] + page[i])
 
    vector<int> dp(x + 1, 0);
    vector<int> new_dp(x + 1, 0);
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= x; j++) {
            if (i == 0 || j == 0) {
                new_dp[j] = 0;
            } else if (j - price[i-1] >= 0) {
                new_dp[j] = max(dp[j], dp[j-price[i-1]] + pages[i-1]);
            } else {
                new_dp[j] = dp[j];
            }
        }
        dp = new_dp;
    }
 
    cout << dp[x] << endl;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());
 
    int t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }
 
    cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl; 
    return 0;
}